<!DOCTYPE html>
<html lang="en">

<!-- Include the common header for login and register -->
<%- include('heading'); %>

<body class="d-flex flex-column min-vh-100">

    <!-- Include the common header in the Body -->
    <%- include('headerInsideBody'); %>

    <!-- Main Checkout Form -->
    <div class="container my-5">
        <h2 class="text-center mb-4">Checkout</h2>

        <!-- Cart Summary -->
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">Your Cart üõí</h5>
                <ul class="list-group list-group-flush" id="cart-summary">
                    <!-- Cart items will be inserted here dynamically -->
                </ul>
                <li class="list-group-item d-flex justify-content-between align-items-center border-top pt-3">
                  <strong>Total:</strong>
                  <strong id="cart-total">$0.00</strong>
              </li>
            </div>
        </div>

        <!-- Simplified Form for Singapore Shipping -->
        <form id="checkout-form">
            <div class="mb-3">
                <label for="name" class="form-label">Full Name</label>
                <input type="text" class="form-control" id="name" placeholder="John Doe" required>
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email (for receipt)</label>
                <input type="email" class="form-control" id="email" placeholder="you@example.com" required>
            </div>

            <div class="mb-3">
                <label for="address" class="form-label">Shipping Address</label>
                <input type="text" class="form-control" id="address" placeholder="123 Orchard Road, #10-01" required>
            </div>

            <div class="mb-3">
                <label for="postal" class="form-label">Postal Code</label>
                <input type="text" class="form-control" id="postal" placeholder="123456" pattern="\d{6}" required>
                <div class="form-text">Please enter a 6-digit Singapore postal code.</div>
            </div>

            <div class="mb-3">
                <label for="payment" class="form-label">Payment Method</label>
                <select class="form-select" id="payment" required>
                    <option value="">Select a payment method</option>
                    <option value="credit">Credit Card</option>
                </select>
            </div>

            <button type="submit" class="btn btn-success w-100">Place Order</button>
        </form>
    </div>

    <!-- Include the common footer -->
    <%- include('footer') %>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include Stripe.js -->
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cartSummary = document.getElementById("cart-summary");
            const cartTotal = document.getElementById("cart-total");
            let total = 0;

            let skipCart = sessionStorage.getItem("skipCart");
            let buyNowItem = JSON.parse(sessionStorage.getItem("buyNowItem"));
            let cart = JSON.parse(localStorage.getItem("cart")) || [];

            cartSummary.innerHTML = ""; // Clear previous items

            if (skipCart === "true" && buyNowItem) {
                // ‚úÖ Only show Buy Now item if `skipCart` is true
                buyNowItem.forEach(item => {
                    total += item.price * item.quantity;
                    cartSummary.innerHTML += `
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            ${item.name} x${item.quantity}
                            <span>$${(item.price * item.quantity).toFixed(2)}</span>
                        </li>`;
                });

                // ‚úÖ Do NOT remove `buyNowItem` yet, let checkout process handle it
            } else {
                // ‚úÖ Load from cart only if Buy Now is NOT in use
                if (cart.length === 0) {
                    cartSummary.innerHTML = '<li class="list-group-item text-center">Your cart is empty.</li>';
                } else {
                    cart.forEach(item => {
                        total += item.price * item.quantity;
                        cartSummary.innerHTML += `
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                ${item.name} x${item.quantity}
                                <span>$${(item.price * item.quantity).toFixed(2)}</span>
                            </li>`;
                    });
                }
            }

            cartTotal.textContent = `$${total.toFixed(2)}`;
        });


        // Handle form submission
        // Initialize Stripe with your Publishable Key
        const stripe = Stripe('pk_test_51QrafBE30HnQRthtLvARhXdQY0DpwqVUbjsnBY1JeNYh4JY7MvLCqD7wMkzqNlVZSkUE8lQWZBPIKxC84z1kFX6f005ANhMOUn');  // Replace with your actual Stripe Publishable Key

        document.getElementById("checkout-form").addEventListener("submit", function (e) {
        e.preventDefault();

        const paymentMethod = document.getElementById("payment").value;
        const email = document.getElementById("email").value;

        let buyNowItem = JSON.parse(sessionStorage.getItem("buyNowItem"));
        let cart = JSON.parse(localStorage.getItem("cart")) || [];

        let finalCart = buyNowItem ? buyNowItem : cart;

        console.log("üìß Email sent in fetch request:", email);  // ‚úÖ Add this debug log

        if (!finalCart || finalCart.length === 0) {
            alert("No products found in cart!");
            return;
        }

        // Convert `finalCart` into the correct format for Stripe API
        let products = finalCart.map(item => ({
            name: item.name,
            price: item.price,  // ‚úÖ Price must be a number
            quantity: item.quantity
        }));

        console.log("üì¶ Final Products Sent to Server:", products);

        if (paymentMethod === "credit") {
            fetch("http://172.188.206.40/api/payment/create-checkout-session", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email: email, products: finalCart  })  // ‚úÖ Send products correctly
            })
            .then(response => response.json())
            .then(session => {
                if (session.error) {
                    console.error("‚ùå Error from server:", session.error);
                    alert("Payment error: " + session.error);
                } else {
                    sessionStorage.removeItem("buyNowItem"); // ‚úÖ Only remove after checkout
                    sessionStorage.removeItem("skipCart"); // ‚úÖ Ensure `skipCart` is cleared
                    return stripe.redirectToCheckout({ sessionId: session.id });
                }
            })
            .catch(error => console.error("‚ùå Fetch Error:", error));
        } else {
            alert("Please select 'Credit Card' as the only available payment method.");
        }
    });

    </script>
    
</body>
</html>
